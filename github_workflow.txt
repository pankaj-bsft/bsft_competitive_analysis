name: Automated Competitor Analysis

on:
  # Schedule to run twice weekly (Monday and Thursday at 9 AM UTC)
  schedule:
    - cron: '0 9 * * 1,4'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      competitors:
        description: 'Specific competitors to analyze (comma-separated: braze,klaviyo,iterable)'
        required: false
        default: 'all'

jobs:
  analyze-competitors:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        # Install system dependencies for Puppeteer
        sudo apt-get update
        sudo apt-get install -y \
          libnss3-dev \
          libatk-bridge2.0-dev \
          libdrm-dev \
          libxcomposite-dev \
          libxdamage-dev \
          libxrandr-dev \
          libgbm-dev \
          libxss-dev \
          libasound2-dev
          
    - name: Create results directory
      run: mkdir -p competitor-analysis-results
      
    - name: Run competitor analysis
      run: npm start
      env:
        # Disable Puppeteer sandbox for GitHub Actions
        PUPPETEER_ARGS: '--no-sandbox --disable-setuid-sandbox'
        
    - name: Upload analysis results
      uses: actions/upload-artifact@v4
      with:
        name: competitor-analysis-${{ github.run_number }}
        path: competitor-analysis-results/
        retention-days: 30
        
    - name: Create summary comment (on manual trigger)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            const resultsDir = 'competitor-analysis-results';
            const files = fs.readdirSync(resultsDir);
            const jsonFile = files.find(f => f.startsWith('analysis-') && f.endsWith('.json'));
            
            if (jsonFile) {
              const results = JSON.parse(fs.readFileSync(path.join(resultsDir, jsonFile), 'utf8'));
              
              let summary = '## üè¢ Competitor Analysis Summary\n\n';
              summary += `**Analysis Date:** ${new Date().toLocaleString()}\n\n`;
              summary += '| Competitor | Items Found | Status |\n';
              summary += '|------------|-------------|--------|\n';
              
              results.forEach(result => {
                const status = result.error ? '‚ùå Error' : '‚úÖ Success';
                summary += `| ${result.competitor} | ${result.itemCount} | ${status} |\n`;
              });
              
              summary += '\nüìä **Download Results:** Check the "Artifacts" section below\n';
              
              github.rest.issues.createComment({
                issue_number: context.issue.number || 1,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: summary
              });
            }
          } catch (error) {
            console.log('Could not create summary:', error.message);
          }

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: analyze-competitors
    if: failure()
    
    steps:
    - name: Notify on failure
      run: |
        echo "‚ùå Competitor analysis failed!"
        echo "Check the logs for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        # Add Slack/email notification here if needed